
def load_regresors_short():
	#CARGAR REGRESORES EN MEMORIA
	regs_dict =   { 'ab1' :  'to_load' , 'ab2' : 'to_load', 'ab3' : 'to_load' ,'mb1' : 'to_load', 'mb2' : 'to_load', 'mb3' : 'to_load' }
	for key in regs_dict.keys():
	    with open("hypers_modelo_10dias/regresores/" + key + "_regs.txt", "rb") as fp:   # Unpickling
		regs_dict[key] = pickle.load(fp)
		
	#CARGAR HYPERPARAMETROS EN MEMORIA
	hyper_dict = {'AB_1': 'to_load','AB_1b': 'to_load','AB_2': 'to_load','AB_3': 'to_load','AB_3b': 'to_load','MB_1': 'to_load','MB_1b':'to_load','MB_2': 'to_load','MB_2b': 'to_load','MB_3': 'to_load' }
	for key in hyper_dict.keys():
	    with open("hypers_modelo_10dias/hiperparametros/" + key + "_hyper.txt", "rb") as fp:   # Unpickling
		hyper_dict[key] = pickle.load(fp)         

	return regs_dict, hyper_dict

def load_models_short(regs_dict ,hyper_dict):
	data_hypers_AB_1b = {'data':AB1_data, 'hypers':hyper_dict['AB_1b'], 'name_mod': 'AB_1b', 'regresores':regs_dict['ab1']  } 
	data_hypers_AB_2 = {'data':AB2_data, 'hypers':hyper_dict['AB_2'], 'name_mod': 'AB_2', 'regresores':regs_dict['ab2'] }
	data_hypers_AB_3 = {'data':AB3_data, 'hypers':hyper_dict['AB_3'], 'name_mod': 'AB_3' , 'regresores':regs_dict['ab3'] }
	data_hypers_MB_1b = {'data':MB1_data, 'hypers':hyper_dict['MB_1b'], 'name_mod':  'MB_1b', 'regresores':regs_dict['mb1'] }
	data_hypers_MB_2 = {'data':MB2_data, 'hypers':hyper_dict['MB_2'], 'name_mod':  'MB_2', 'regresores': regs_dict['mb2'] }
	data_hypers_MB_3 = {'data':MB3_data, 'hypers':hyper_dict['MB_3'] , 'name_mod': 'MB_3', 'regresores': regs_dict['mb3'] }

	#lista iterable de diccionarios
	to_predict_dict = [
	data_hypers_AB_1b,
	data_hypers_AB_2,
	data_hypers_AB_3,
	data_hypers_MB_1b,
	data_hypers_MB_2,
	data_hypers_MB_3,
	data_hypers_MB_2,
	data_hypers_MB_3
	]

	return to_predict_dict
